@startuml

interface setId{
    {method} setId(long id)
}

class Department implements setId {
    {field} - long id
    {field} - String name
    --
    {method} + Department()
    {method} + Department(String name)
    {method} + Department(long id, String name)
    ==
    {method} + getId()
    {method} + getId()
    {method} + getName()
    {method} + setName(String name)
    --@Override--
    {method} + setId(long id)
}

class Member implements setId {
    {field} - long id
    {field} - String firstName
    {field} - String lastName
    {field} - String email
    {field} - Long departmentId
    --
    {method} + Member(String firstName, String lastName, String email)
    {method} + Member(int id, String firstName, String lastName, String email)
    {method} + Member(String memberFirstName, String memberLastName, String memberEmail, Long departmentId)
    {method} + Member(int id, String memberFirstName, String memberLastName, String memberEmail, Long departmentId)
    ==
    {method} + getId()
    {method} + getFirstName()
    {method} + getLastName()
    {method} + getEmail() {
    {method} + getDepartmentId()
    {method} + setDepartmentId(Long departmentId)
    --@Override--
    {method} + setId(long id)
}

class Task implements setId,TaskStatus{
    {field} - long id
    {field} - String name
    {field} - String description
    {field} - TaskStatus status
    --
    {method} + Task(String name, String description, String status)
    {method} + Task(long id, String name, String description, String status)
    ==
    {method} + getId()
    {method} + getStatus()
    {method} + setStatus(String status)
    {method} + getName()
    {method} + setName(String name)
    {method} + getDescription()
    {method} + setDescription(String description)
    --@Override--
    {method} + setId(long id)
}

class TaskMember implements setId{
    {field} - long id;
    {field} - long taskId;
    {field} - long memberId;
    --
    {method} + TaskMember(long taskId, long memberId)
    ==
    {method} + getId()
    {method} + getTaskId()
    {method} + setTaskId(long taskId)
    {method} + getMemberId()
    {method} + setMemberId(long memberId)
    --@Override--
    {method} + setId(long id)
    }

enum TaskStatus {
    OPEN
    IN_PROGRESS
    FINISHED
    CANCELED
    }


@enduml